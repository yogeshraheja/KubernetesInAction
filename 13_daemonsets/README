A DaemonSet ensures that all (or some) Nodes run a copy of a Pod. As nodes are added to the cluster, Pods are added to them. As nodes are removed from the cluster, those Pods are garbage collected. Deleting a DaemonSet will clean up the Pods it created.

CASE1: 

- kubectl create -f file.yml
- kubectl get ds
- kubectl describe ds
- kubectl get pods

You will observer by default the DS didnt create PODS on master, though the definition says it will create a pod on whole cluster. Now as master comes with TAINT set up default so that no-one can create any pods on master. So in order to have DS deploy pods on master we need to set toleration with it. Which is done in case2.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: dstest
  name: dstest
spec:
  selector:
    matchLabels:
      app: dstest
  template:
    metadata:
      labels:
        app: dstest
    spec:
      containers:
      - image: busybox
        name: busybox
        command:
        - sh
        - -c
        - "sleep 10000"


CASE2: With tolerations set to have DS deploy pods everywhere including master:


apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: dstest1
  name: dstest1
spec:
  selector:
    matchLabels:
      app: dstest1
  template:
    metadata:
      labels:
        app: dstest1
    spec:
      containers:
      - image: busybox
        name: busybox
        command:
        - sh
        - -c
        - "sleep 10000"
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

